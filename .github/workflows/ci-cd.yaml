name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.0

      - name: Install dependencies and run tests
        run: |
          go mod tidy
          go test ./...

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          BRANCH=$(basename "$GITHUB_REF")
          echo "Building image for branch: $BRANCH"
          if [ "$BRANCH" = "main" ]; then
            echo "Building production image..."
            docker build -t ${{ secrets.DOCKER_USERNAME }}/elderwise:latest .
            docker push ${{ secrets.DOCKER_USERNAME }}/elderwise:latest
          else
            echo "Building development image..."
            docker build -t ${{ secrets.DOCKER_USERNAME }}/elderwise:dev .
            docker push ${{ secrets.DOCKER_USERNAME }}/elderwise:dev
          fi

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    env:
      GITHUB_REF: ${{ github.ref }}
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # Hentikan script jika terjadi error dan tampilkan pesan error
            set -e
            trap 'echo "An error occurred. Exiting..." && exit 1' ERR

            BRANCH=$(basename "$GITHUB_REF")
            if [ -z "$BRANCH" ]; then
              echo "Branch name is empty. Exiting."
              exit 1
            fi

            echo "Deploying branch: $BRANCH"

            if [ "$BRANCH" = "main" ]; then
              cd github/elderwise-be-prod || { echo "Directory github/elderwise-be-prod not found."; exit 1; }
              git fetch origin
              git checkout "$BRANCH" || git checkout -b "$BRANCH" origin/"$BRANCH"
              git reset --hard origin/"$BRANCH"
              go mod vendor
              docker image prune -f
              echo "Deploying production environment..."
              if [ ! -f docker-compose.prod.yml ]; then
                echo "docker-compose.prod.yml not found in $(pwd). Exiting."
                exit 1
              fi
              docker-compose -f docker-compose.prod.yml down -v
              docker-compose -f docker-compose.prod.yml pull
              docker-compose -f docker-compose.prod.yml up --build -d
            else
              cd github/elderwise-be-dev || { echo "Directory github/elderwise-be-dev not found."; exit 1; }
              git fetch origin
              git checkout "$BRANCH" || git checkout -b "$BRANCH" origin/"$BRANCH"
              git reset --hard origin/"$BRANCH"
              go mod vendor
              docker image prune -f
              echo "Deploying development environment..."
              if [ ! -f docker-compose.dev.yml ]; then
                echo "docker-compose.dev.yml not found in $(pwd). Exiting."
                exit 1
              fi
              docker-compose -f docker-compose.dev.yml down -v
              docker-compose -f docker-compose.dev.yml pull
              docker-compose -f docker-compose.dev.yml up --build -d
            fi

            echo "Deployment completed successfully."
